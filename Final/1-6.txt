1.
Break Point는 디버깅을 하기 위해 설정하는 것이며, 특정 값이나 루프문을 확인할때 주로 사용한다.
비주얼 스튜디오는 중단점을 설정할 줄을 클릭한 후 F9키를 누르면 중단점이 설정된다. 
중단점을 해제하려면 다시 F9를 누른다.
F9를 누른 후 F5를 누르면 단번에 거기 까지 간다. 즉, F5를 누르면 처음부터 중단점 직전까지 한꺼번에 실행된다.
이때, printf나 scanf가 있다면 콘솔창에 값을 입력하게 된다.

2. 
매개변수, 지역변수, 리턴주소, 리턴값으로 구성되어 있다.
매개변수는 호출 함수가 피 호출 함수에게 넘기고자 하는 인자 값이다.
지역변수는 피호출 함수 내에서 선언한 변수이며, 
리턴주소는 함수 실행을 마친 다음 실행할 명령문의 주소,
리턴값은 피호출 함수가 호출 함수에 되돌려주는 값이다.

3.
a) arr[i]    
arr이 int형이라면 
int * a;
a = (int*)malloc(sizeof(int)*i);

b) arr[i][j]
int *arr[j]
*arr = (int*)malloc(sizeof(int)*i);

4. 
Shallow Copy은 단순히 포인터 값만 복사하는 방법이고,
Deep Copy은 주소값을 가져가서 메모리의 데이터를 바꾸는것이다.


5. 
배열로 stack을 구현할 경우 stack top은 오른쪽 끝에 있다. 
반면, 연결 리스트로 stack을 구현할 경우 stack top 은 리스트의 첫 노드이다. 
연결 리스트로 구현한 스택은 is_full 함수가 불필요하다. 
그 이유는 고정된 배열에서는 항상 push이전에 빈 공간이 있는지 확인해야 하지만 연결리스트에서는 malloc에 의해 새로운 노드를 자유롭게 추가할수 있기 때문이다.
그러나 free_list 함수가 필요한데 그 이유는 동적 메모리를 할당 했기 때문에 배열과 달리 나중에 메모리를 반납하기 위해서 이다.



6. 
#include <stdio.h>
#include <string.h>

void add(int a, int b) { 
  printf("%d", a + b); 
}

int main() {
  void (*a)();
  a = add;
  a(3, 5);
}
